import java.util.Scanner;

public class knapsackProblem {

    // Returns the maximum value that can be put in a knapsack of capacity W
    static int[] knapSack(int W, int wt[], int val[], int n) {
        int i, w;
        int[][] K = new int[n + 1][W + 1];

        // Build table K[][] in bottom-up manner
        for (i = 0; i <= n; i++) {
            for (w = 0; w <= W; w++) {
                if (i == 0 || w == 0)
                    K[i][w] = 0;
                else if (wt[i - 1] <= w)
                    K[i][w] = Math.max(val[i - 1] + K[i - 1][w - wt[i - 1]], K[i - 1][w]);
                else
                    K[i][w] = K[i - 1][w];
            }
        }

        int maxValue = K[n][W];
        int totalWeightUsed = 0;
        w = W;
        for (i = n; i > 0 && maxValue > 0; i--) {
            if (maxValue != K[i - 1][w]) {
                totalWeightUsed += wt[i - 1];
                w -= wt[i - 1];
                maxValue -= val[i - 1];
            }
        }

        return new int[] { totalWeightUsed, K[n][W] };
    }

    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of items: ");
        int n = scanner.nextInt();

        int val[] = new int[n];
        int wt[] = new int[n];

        System.out.println("Enter the values of items:");
        for (int i = 0; i < n; i++) {
            val[i] = scanner.nextInt();
        }

        System.out.println("Enter the weights of items:");
        for (int i = 0; i < n; i++) {
            wt[i] = scanner.nextInt();
        }

        System.out.print("Enter the maximum weight capacity of knapsack: ");
        int W = scanner.nextInt();

        scanner.close();

        int[] result = knapSack(W, wt, val, n);
        System.out.println("Maximum value that can be put in a knapsack of capacity " + W + " is: " + result[1]);
        System.out.println("Total weight used: " + result[0]);
    }
}
